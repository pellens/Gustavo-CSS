@keyframes rotate {
    from {
        transform: rotate(0deg);
    }
    to { 
        transform: rotate(360deg);
    }
}

@mixin button {
    vertical-align: middle;
    appearance: none;
    border: 0;
    height: 3rem;
    display: inline-flex;
    padding: 0 1.5rem;
    align-items: center;
    border-radius: var(--button-border-radius);
    background-color: var(--color-default);
    border: 1px solid var(--color-default);
    font-size: 1rem;
    font-family: var(--font-family);
    text-decoration: none;
    color: inherit;
    justify-content: center;
    cursor: pointer;
    white-space: nowrap;

    i {
        margin-right: .5rem;
        font-size: var(--icon-size);
    }

    &:hover {
        filter: brightness(1.05);
    }
}

button,
input[type=submit],
input[type=reset] {
    @include button;
}

.g {

    &-button {
        @include button;

        &--icon-after {
            i {
                margin-right: 0;
                margin-left: .5rem;
            }
        }

        &--icon-only {
            padding: 0 1rem;
            
            i {
                margin-right: 0;
                margin-left: 0;
            }
        }

        &--disabled {
            opacity: .5;
            cursor: not-allowed;
        }

        &--loading {
            &:before {
                content:' ';
                left: 0;
                top: 0;
                width: calc(var(--icon-size) / 2);
                height: calc(var(--icon-size) / 2);
                border: 2px solid #FFF;
                border-color: var(--button-text-color-default);
                border-radius: 100%;
                background-size: 1.25rem;
                margin-right: 1rem;
                clip-path: polygon(100% 0%, 0% 0%, 0% 100%, 100% 100%, 100% 65%, 50% 75%, 50% 35%, 100% 25%);
                animation: rotate infinite 1000ms linear;
            }

            &.g-button--icon-only {
                &:before {
                    margin: 0;
                }
            }
        }

        @each $title, $bg, $txt in $colors {
            &--#{$title} {
                background-color: var(--color-#{$title});
                border: 1px solid var(--color-#{$title});
                color: var(--button-text-color-#{$title});

                &:before {
                    border-color: var(--button-text-color-#{$title});
                }
            }
        }

        @each $title, $size in $sizes {
            &--#{$title} {
                height: #{$size}rem;
                padding: 0 calc(#{$size}rem / 2);
                font-size: calc(#{$size}rem / 3);

                &.g-button--icon-only {
                    padding: 0 calc(#{$size}rem / 4);
                }
            }
        }

        &--outline {
            background-color: transparent;

            @each $title, $bg, $txt in $colors {
                &.g-button--#{$title} {
                    color: var(--button-text-color-#{$title}-outline);
    
                    &:hover {
                        //background-color: rgba( var(--color-#{$title}),.75);
                        filter: brightness(1.25);
                    }
                }
            }
        }
    }
}